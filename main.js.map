{"version":3,"sources":["./src/app/helpers/heart-rate.helper.ts","./src/app/helpers/index.ts","./src/environments/environment.ts","./src/app/devices/heart-rate.device.ts","./src/app/helpers/type-guards.helper.ts","./src/app/components/app/app.component.ts","./src/app/components/app/app.component.html","./src/app/components/heart-rate/heart-rate.component.ts","./src/app/components/heart-rate/heart-rate.component.html","./src/app/app.module.ts","./src/app/helpers/bluetooth.helper.ts","./src/app/components/trainer/trainer.component.ts","./src/app/components/trainer/trainer.component.html","./src/app/constants.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HeartRateResult } from '../contracts';\nimport { isDataView } from './type-guards.helper';\n\nexport function parseHeartRate(value: DataView | ArrayBuffer): HeartRateResult {\n    // In Chrome 50+, a DataView is returned instead of an ArrayBuffer.\n    value = isDataView(value) ? value : new DataView(value);\n    const flags = value.getUint8(0);\n    const rate16Bits = flags & 0x1;\n    const result: Partial<HeartRateResult> = {};\n\n    let index = 1;\n    let heartRate: number;\n    if (rate16Bits) {\n        heartRate = value.getUint16(index, /*littleEndian=*/ true);\n        index += 2;\n    } else {\n        heartRate = value.getUint8(index);\n        index += 1;\n    }\n\n    const contactDetected = flags & 0x2;\n    const contactSensorPresent = flags & 0x4;\n    if (contactSensorPresent) {\n        result.contactDetected = !!contactDetected;\n    }\n\n    const energyPresent = flags & 0x8;\n    if (energyPresent) {\n        result.energyExpended = value.getUint16(index, /*littleEndian=*/ true);\n        index += 2;\n    }\n\n    const rrIntervalPresent = flags & 0x10;\n    if (rrIntervalPresent) {\n        result.rrIntervals = [];\n        for (; index + 1 < value.byteLength; index += 2) {\n            result.rrIntervals.push(value.getUint16(index, /*littleEndian=*/ true));\n        }\n    }\n\n    return { heartRate, ...result };\n}\n","export * from './heart-rate.helper';\nexport * from './type-guards.helper';\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { defer, merge, Observable, of } from 'rxjs';\nimport { map, share, skipUntil, switchMap, takeUntil, tap } from 'rxjs/operators';\n\nimport { HeartRateResult, ProgressMessage } from '../contracts';\nimport { isProgressMessage, parseHeartRate } from '../helpers';\nimport {\n    connectServer,\n    deviceDisconnectionStream,\n    getNotifications,\n    getService,\n    requestDevice,\n    timeOutStream,\n} from '../helpers/bluetooth.helper';\n\n@Injectable()\nexport class HeartRateDevice {\n    private server?: BluetoothRemoteGATTServer;\n    private characteristic?: BluetoothRemoteGATTCharacteristic;\n\n    public connect(): Observable<HeartRateResult | ProgressMessage> {\n        return requestDevice(['heart_rate']).pipe(\n            switchMap((server) => {\n                if (isProgressMessage(server)) {\n                    return of(server);\n                }\n\n                console.log(`DEVICE CONNECTED`);\n                const updatesStream = this.subscribeToUpdates(server).pipe(\n                    tap(() => console.log(`UPDATE`)),\n                    share(),\n                );\n\n                const reconnectionStream = deviceDisconnectionStream(server).pipe(\n                    skipUntil(updatesStream),\n                    tap(() => console.log(`DEVICE DISCONNECTED`)),\n                    switchMap(() => this.subscribeToUpdates(server)),\n                    share(),\n                );\n\n                return merge(updatesStream.pipe(takeUntil(reconnectionStream)), reconnectionStream);\n            }),\n        );\n    }\n\n    public async disconnect(): Promise<boolean> {\n        if (this.characteristic != null && this.server?.connected) {\n            console.log(`Stopping notifications`, this.characteristic);\n            try {\n                await this.characteristic.stopNotifications();\n            } catch (e) {\n                console.log(`Error stopping notifications: `, e);\n            }\n        }\n\n        if (this.server) {\n            console.log(`Stopping server`, this.server);\n            this.server.disconnect();\n        }\n\n        this.server = undefined;\n        this.characteristic = undefined;\n\n        return true;\n    }\n\n    private subscribeToUpdates(server: BluetoothRemoteGATTServer): Observable<HeartRateResult | ProgressMessage> {\n        return defer(() => {\n            console.log(`HeartRateDevice.subscribeToUpdates`);\n            this.server = server;\n\n            const updatesStream = connectServer(server).pipe(\n                switchMap((data) => (isProgressMessage(data) ? of(data) : getService(data, 'heart_rate'))),\n                switchMap((data) =>\n                    isProgressMessage(data) ? of(data) : data.getCharacteristic('heart_rate_measurement'),\n                ),\n                tap((data) => {\n                    if (!isProgressMessage(data)) {\n                        this.characteristic = data;\n                    }\n                }),\n                switchMap((data) => (isProgressMessage(data) ? of(data) : getNotifications(data))),\n                map((data) => (isProgressMessage(data) ? data : parseHeartRate(data))),\n                share(),\n            );\n\n            return merge(timeOutStream<HeartRateResult>(60000).pipe(takeUntil(updatesStream)), updatesStream);\n        });\n    }\n}\n","import { ProgressMessage } from '../contracts';\n\nexport function isDataView(value: unknown): value is DataView {\n    return value != null && (value as DataView).buffer instanceof ArrayBuffer;\n}\n\nexport function isProgressMessage(value: unknown): value is ProgressMessage {\n    return value != null && (value as ProgressMessage).type === 'progressMessage';\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {}\n","\n<div class=\"container\">\n\n    <heart-rate></heart-rate>\n\n    <trainer></trainer>\n</div>","import { Component } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { NOT_FOUND_ERROR } from '../../constants';\nimport { HeartRateResult, ProgressMessage } from '../../contracts';\nimport { HeartRateDevice } from '../../devices/heart-rate.device';\nimport { isProgressMessage } from '../../helpers';\n\nconst connectButtonText = 'Connect HRM';\n\n@Component({\n    selector: 'heart-rate',\n    templateUrl: './heart-rate.component.html',\n    styleUrls: ['./heart-rate.component.scss'],\n})\nexport class HeartRateComponent {\n    private wakeLockSentinel: WakeLockSentinel | undefined;\n\n    constructor(private heartRateDevice: HeartRateDevice) {}\n\n    private _logOutput = '';\n\n    public get logOutput(): string {\n        return `[\n${this._logOutput}]`;\n    }\n\n    private _warningMessage?: string;\n\n    public get warningMessage(): string | undefined {\n        return this._warningMessage;\n    }\n\n    private _errorMessage?: string;\n\n    public get errorMessage(): string | undefined {\n        return this._errorMessage;\n    }\n\n    private _heartRate?: number;\n\n    public get heartRate(): number | undefined {\n        return this._heartRate;\n    }\n\n    private _buttonText: string | undefined = connectButtonText;\n\n    public get buttonText(): string | undefined {\n        return this._buttonText;\n    }\n\n    private _buttonEnabled = true;\n\n    public get buttonEnabled(): boolean {\n        return this._buttonEnabled;\n    }\n\n    private subscription?: Subscription;\n\n    public get canDisconnect(): boolean {\n        return this.subscription != null;\n    }\n\n    public async disconnect(): Promise<void> {\n        this.reset();\n\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = undefined;\n        }\n\n        if (this.wakeLockSentinel) {\n            this.wakeLockSentinel.release();\n            this.wakeLockSentinel = undefined;\n        }\n\n        await this.heartRateDevice.disconnect();\n    }\n\n    public dismissMessages(): void {\n        this._warningMessage = undefined;\n        this._errorMessage = undefined;\n    }\n\n    public connectSensor(): void {\n        this.reset();\n\n        try {\n            navigator.wakeLock.request('screen').then((sentinel) => {\n                this.log({ message: 'Wakelog obtained' });\n                this.wakeLockSentinel = sentinel;\n            });\n        } catch (err) {\n            this._warningMessage = `Could not obtain wakelock: ${err}`;\n        }\n        this._buttonEnabled = false;\n        this._buttonText = 'Connecting...';\n        this.heartRateDevice.connect().subscribe(\n            (result) => this.handleUpdate(result),\n            (error) => this.handleError(error, 'Error connecting to sensor'),\n        );\n    }\n\n    private reset(): void {\n        this._buttonEnabled = true;\n        this._buttonText = connectButtonText;\n        this._warningMessage = undefined;\n        this._errorMessage = undefined;\n        this._heartRate = undefined;\n    }\n\n    private handleUpdate(result: HeartRateResult | ProgressMessage) {\n        this.log(isProgressMessage(result) ? result : { heartRate: result.heartRate });\n\n        if (isProgressMessage(result)) {\n            this._buttonText = result.message;\n            return;\n        }\n\n        this.reset();\n        this._buttonEnabled = false;\n        this._buttonText = undefined;\n        this._heartRate = result.heartRate;\n        console.log(`Heart Rate Result`, result);\n    }\n\n    private handleError(error: unknown, message?: string) {\n        this.disconnect();\n\n        if (error instanceof DOMException && error.name === NOT_FOUND_ERROR) {\n            this._warningMessage = `No Device Selected`;\n        } else {\n            this._errorMessage = `${message ? message + ': ' : ''}${error}`;\n        }\n    }\n\n    private log(data: Record<string, string | number | boolean | undefined>) {\n        this._logOutput = `${JSON.stringify({ ...data, at: Date.now() })},\\n${this._logOutput}`;\n    }\n}\n","<div class=\"col-sm m-auto\">\n\n    <div *ngIf=\"warningMessage != null\" class=\"alert alert-warning alert-dismissible mt-3\">\n        {{warningMessage}}\n\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dismissMessages()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n\n    <div *ngIf=\"errorMessage != null\" class=\"alert alert-danger alert-dismissible mt-3\">\n        {{errorMessage}}\n\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dismissMessages()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n\n    <div class=\"center-content position-relative\">\n        <div *ngIf=\"buttonText != null\" class=\"button-overlay center-content\">\n            <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"!buttonEnabled\" (click)=\"connectSensor()\">{{buttonText}}</button>\n        </div>\n\n        <div *ngIf=\"heartRate != null\" class=\"button-overlay center-content heart-rate\">\n            {{heartRate}}\n        </div>\n\n        <div>\n            <i class=\"bi-heart-fill\"></i>\n        </div>\n\n        <button *ngIf=\"canDisconnect\" type=\"button\" class=\"close close-button\" aria-label=\"Close\" (click)=\"disconnect()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n\n    <div>\n        <textarea class=\"w-100\" [value]=\"logOutput\"></textarea>\n    </div>\n\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { version } from '../../package.json';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './components/app/app.component';\nimport { HeartRateComponent } from './components/heart-rate/heart-rate.component';\nimport { TrainerComponent } from './components/trainer/trainer.component';\nimport { HeartRateDevice } from './devices/heart-rate.device';\n\n@NgModule({\n    declarations: [AppComponent, HeartRateComponent, TrainerComponent],\n    imports: [BrowserModule, AppRoutingModule],\n    providers: [HeartRateDevice],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {\n    constructor() {\n        document.title = `HRM Trainer Control ${version}`;\n    }\n}\n","import { from, interval, merge, Observable, of } from 'rxjs';\nimport { catchError, map, switchMap, take, tap } from 'rxjs/operators';\n\nimport { ProgressMessage } from '../contracts';\n\nconst retryCount = 5;\n\nexport function requestDevice(\n    services: [BluetoothServiceUUID, ...BluetoothServiceUUID[]],\n    retries = 0,\n): Observable<BluetoothRemoteGATTServer | ProgressMessage> {\n    console.log(`requestDevice(${retries})...`, services);\n    const requestStream = from(navigator.bluetooth.requestDevice({ filters: [{ services }] })).pipe(\n        tap((device) => console.log(`Device Selected:`, device.name)),\n        map((device) => {\n            if (device.gatt == null) {\n                throw new Error(`gatt is not defined on device`);\n            }\n            return device.gatt;\n        }),\n        catchError((err) => {\n            console.log(`Error selecting device`, err);\n            if (retries >= retryCount || err.name === 'NotFoundError') {\n                throw err;\n            } else {\n                return requestDevice(services, retries + 1);\n            }\n        }),\n    );\n\n    const progressMessage: ProgressMessage = { message: 'Requesting Device...', type: 'progressMessage' };\n\n    return merge(of(progressMessage), requestStream);\n}\n\nexport function timeOutStream<T>(timeInMs: number): Observable<T> {\n    console.log(`Starting timeout...`, timeInMs);\n\n    return interval(timeInMs).pipe(\n        take(1),\n        map(() => {\n            throw new Error(`Timeout waiting for device connection.`);\n        }),\n    );\n}\n\nexport function deviceDisconnectionStream(server: BluetoothRemoteGATTServer): Observable<BluetoothRemoteGATTServer> {\n    return new Observable<BluetoothRemoteGATTServer>((observer) => {\n        function handleEvent(event: Event) {\n            console.log(`Gatt server disconnected`, event);\n            observer.next(server);\n        }\n        console.log(`Add event listener: gattserverdisconnected`);\n        server.device.addEventListener('gattserverdisconnected', handleEvent);\n\n        return {\n            unsubscribe: () => {\n                console.log(`Remove Event Listener: gattserverdisconnected`);\n                server.device.removeEventListener('gattserverdisconnected', handleEvent);\n            },\n        };\n    });\n}\n\nexport function connectServer(\n    server: BluetoothRemoteGATTServer,\n    retries = 0,\n): Observable<BluetoothRemoteGATTServer | ProgressMessage> {\n    console.log(`connectServer(${retries})...`);\n\n    return new Observable<BluetoothRemoteGATTServer | ProgressMessage>((observer) => {\n        console.log(`Connecting to server...`);\n        server.connect().then(\n            () => {\n                console.log(`Server Connected`, server);\n                observer.next(server);\n            },\n            (error) => observer.error(error),\n        );\n\n        observer.next({ message: 'Connecting to Server...', type: 'progressMessage' });\n\n        return {\n            unsubscribe: () => {\n                if (server.connected) {\n                    console.log(`connectServer.unsubscribe: Disconnecting from server...`, server);\n                    server.disconnect();\n                } else {\n                    console.log(`connectServer.unsubscribe: Server already disconnected`, server);\n                }\n            },\n        };\n    }).pipe(\n        catchError((err) => {\n            console.log(`Error connecting to server`, err);\n            if (retries < retryCount) {\n                return connectServer(server, retries + 1);\n            } else {\n                throw err;\n            }\n        }),\n    );\n}\n\nexport function getService(\n    server: BluetoothRemoteGATTServer,\n    service: BluetoothServiceUUID,\n    retries = 0,\n): Observable<BluetoothRemoteGATTService | ProgressMessage> {\n    console.log(`getService(${retries}) '${service}'...`, server);\n\n    const getServiceStream = from(server.getPrimaryService(service)).pipe(\n        tap(() => console.log(`Service returned`)),\n        catchError((err) => {\n            console.log(`Error getting service: '${service}'`, server, err);\n            if (!server.connected) {\n                return connectServer(server, retries + 1).pipe(\n                    switchMap(() => getService(server, service, retries + 1)),\n                );\n            } else if (retries < 3) {\n                return getService(server, service, retries + 1);\n            } else {\n                throw err;\n            }\n        }),\n    );\n\n    const progressMessage: ProgressMessage = { message: 'Getting Service...', type: 'progressMessage' };\n\n    return merge(of(progressMessage), getServiceStream);\n}\n\nexport function getNotifications(characteristic: BluetoothRemoteGATTCharacteristic): Observable<DataView> {\n    console.log(`starting notifications`, characteristic);\n    characteristic.startNotifications();\n\n    return new Observable((observer) => {\n        function handleEvent() {\n            if (characteristic.value != null) {\n                observer.next(characteristic.value);\n            }\n        }\n        characteristic.addEventListener('characteristicvaluechanged', handleEvent);\n\n        return {\n            unsubscribe: () => {\n                characteristic.removeEventListener('characteristicvaluechanged', handleEvent);\n            },\n        };\n    });\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'trainer',\n    templateUrl: './trainer.component.html',\n    styleUrls: ['./trainer.component.scss'],\n})\nexport class TrainerComponent {}\n","<p>trainer.component works!</p>\n","export const NOT_FOUND_ERROR = 'NotFoundError';\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}