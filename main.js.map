{"version":3,"sources":["./src/app/helpers/heart-rate.helper.ts","./src/app/helpers/index.ts","./src/environments/environment.ts","./src/app/helpers/logger.ts","./src/app/devices/heart-rate.device.ts","./src/app/helpers/type-guards.helper.ts","./src/app/components/app/app.component.ts","./src/app/components/app/app.component.html","./src/app/components/heart-rate/heart-rate.component.ts","./src/app/components/heart-rate/heart-rate.component.html","./src/app/devices/index.ts","./src/app/app.module.ts","./src/app/helpers/wakelock.helper.ts","./src/app/helpers/bluetooth.helper.ts","./src/app/components/trainer/trainer.component.ts","./src/app/components/trainer/trainer.component.html","./src/app/constants.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HeartRateResult } from '../contracts';\nimport { isDataView } from './type-guards.helper';\n\nexport const HEART_RATE_SERVICE = 'heart_rate';\nexport const HEART_RATE_CHARACTERISTIC = `heart_rate_measurement`;\n\nexport const rate16Bits = 0x1;\nexport const contactDetected = 0x2;\nexport const contactSensorPresent = 0x4;\nexport const energyPresent = 0x8;\nexport const rrIntervalPresent = 0x10;\n\nexport function parseHeartRate(value: DataView | ArrayBuffer): HeartRateResult {\n    // In Chrome 50+, a DataView is returned instead of an ArrayBuffer.\n    value = isDataView(value) ? value : new DataView(value);\n\n    const flags = value.getUint8(0);\n    const rate16BitsFlag = flags & rate16Bits;\n    const result: Partial<HeartRateResult> = {};\n\n    let index = 1;\n    let heartRate: number;\n    if (rate16BitsFlag) {\n        heartRate = value.getUint16(index, /*littleEndian=*/ true);\n        index += 2;\n    } else {\n        heartRate = value.getUint8(index);\n        index += 1;\n    }\n\n    const contactDetectedFlag = flags & contactDetected;\n    const contactSensorPresentFlag = flags & contactSensorPresent;\n    if (contactSensorPresentFlag) {\n        result.contactDetected = !!contactDetectedFlag;\n    }\n\n    const energyPresentFlag = flags & energyPresent;\n    if (energyPresentFlag) {\n        result.energyExpended = value.getUint16(index, /*littleEndian=*/ true);\n        index += 2;\n    }\n\n    const rrIntervalPresentFlag = flags & rrIntervalPresent;\n    if (rrIntervalPresentFlag) {\n        result.rrIntervals = [];\n        for (; index + 1 < value.byteLength; index += 2) {\n            result.rrIntervals.push(value.getUint16(index, /*littleEndian=*/ true));\n        }\n    }\n\n    return { heartRate, ...result };\n}\n","export * from './bluetooth.helper';\nexport * from './heart-rate.helper';\nexport * from './logger';\nexport * from './type-guards.helper';\nexport * from './wakelock.helper';\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export enum LogLevel {\n    fatal = 5,\n    error = 4,\n    warn = 3,\n    info = 2,\n    debug = 1,\n    trace = 0,\n}\n\nexport type Log = {\n    level: LogLevel;\n    message: string;\n    meta: unknown[];\n};\n\nexport class Logger {\n    private readonly _logs: Log[] = [];\n\n    public log(level: keyof typeof LogLevel, message: string, ...meta: unknown[]): void {\n        console.log(`[${level.toUpperCase()}] ${message}`, ...meta);\n\n        this._logs.push({ level: LogLevel[level], message, meta });\n    }\n\n    public fatal(message: string, ...meta: unknown[]): void {\n        this.log('fatal', message, ...meta);\n    }\n\n    public error(message: string, ...meta: unknown[]): void {\n        this.log('error', message, ...meta);\n    }\n\n    public warn(message: string, ...meta: unknown[]): void {\n        this.log('warn', message, ...meta);\n    }\n\n    public info(message: string, ...meta: unknown[]): void {\n        this.log('info', message, ...meta);\n    }\n\n    public debug(message: string, ...meta: unknown[]): void {\n        this.log('debug', message, ...meta);\n    }\n\n    public trace(message: string, ...meta: unknown[]): void {\n        this.log('trace', message, ...meta);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { from, merge, Observable, of } from 'rxjs';\nimport { filter, map, mergeMap, share, switchMap, takeUntil, tap } from 'rxjs/operators';\n\nimport { HeartRateResult } from '../contracts';\nimport { BluetoothHelper, HEART_RATE_CHARACTERISTIC, HEART_RATE_SERVICE, parseHeartRate } from '../helpers';\n\n@Injectable()\nexport class HeartRateDevice {\n    constructor(private helper: BluetoothHelper) {}\n\n    public connect(connectionRetries = 5): Observable<HeartRateResult> {\n        return this.helper.requestDevice([HEART_RATE_SERVICE]).pipe(\n            mergeMap((device) => {\n                const updatesStream = this.subscribeToUpdates(device, connectionRetries).pipe(share());\n\n                return merge(\n                    updatesStream,\n                    this.helper.createTimeOutStream<HeartRateResult>(60000).pipe(takeUntil(updatesStream)),\n                );\n            }),\n        );\n    }\n\n    private subscribeToUpdates(device: BluetoothDevice, connectionRetries: number): Observable<HeartRateResult> {\n        let retries = 0;\n\n        return merge(of(device), this.helper.createDeviceDisconnectionStream(device)).pipe(\n            filter(() => retries++ < connectionRetries),\n            switchMap((device) => this.helper.connectServer(device)),\n            switchMap((server) => this.helper.getService(server, HEART_RATE_SERVICE)),\n            switchMap((service) => from(service.getCharacteristic(HEART_RATE_CHARACTERISTIC))),\n            switchMap((characteristic) => this.helper.getNotifications(characteristic)),\n            tap(() => (retries = 0)),\n            map((data) => parseHeartRate(data)),\n        );\n    }\n}\n","import { ProgressMessage } from '../contracts';\n\nexport function isDataView(value: unknown): value is DataView {\n    return value != null && (value as DataView).buffer instanceof ArrayBuffer;\n}\n\nexport function isProgressMessage(value: unknown): value is ProgressMessage {\n    return value != null && (value as ProgressMessage).type === 'progressMessage';\n}\n","import { Component } from '@angular/core';\n\nimport { version } from '../../../../package.json';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n    constructor() {\n        document.title = `HRM Trainer Control ${version}`;\n    }\n\n    public get version(): string {\n        return version;\n    }\n}\n","\n<small class=\"version-display text-muted\">{{version}}</small>\n\n<div class=\"container d-flex flex-column h-100 pb-3\">\n\n    <heart-rate class=\"flex-grow-1\"></heart-rate>\n</div>","import { Component } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { NOT_FOUND_ERROR } from '../../constants';\nimport { HeartRateResult } from '../../contracts';\nimport { HeartRateDevice } from '../../devices';\nimport { Logger, WakelockHelper } from '../../helpers';\n\nconst connectButtonText = 'Connect HRM';\n\n@Component({\n    selector: 'heart-rate',\n    templateUrl: './heart-rate.component.html',\n    styleUrls: ['./heart-rate.component.scss'],\n})\nexport class HeartRateComponent {\n    constructor(\n        private heartRateDevice: HeartRateDevice,\n        private wakelockHelper: WakelockHelper,\n        private logger: Logger,\n    ) {}\n\n    private _warningMessage?: string;\n\n    public get warningMessage(): string | undefined {\n        return this._warningMessage;\n    }\n\n    private _errorMessage?: string;\n\n    public get errorMessage(): string | undefined {\n        return this._errorMessage;\n    }\n\n    private _heartRate?: number;\n\n    public get heartRate(): number | undefined {\n        return this._heartRate;\n    }\n\n    private _buttonText: string | undefined = connectButtonText;\n\n    public get buttonText(): string | undefined {\n        return this._buttonText;\n    }\n\n    private _buttonEnabled = true;\n\n    public get buttonEnabled(): boolean {\n        return this._buttonEnabled;\n    }\n\n    private subscription?: Subscription;\n\n    public get canDisconnect(): boolean {\n        return this.subscription != null;\n    }\n\n    public async disconnect(): Promise<void> {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = undefined;\n        }\n\n        this.reset();\n    }\n\n    public dismissMessages(): void {\n        this._warningMessage = undefined;\n        this._errorMessage = undefined;\n    }\n\n    public connectSensor(): void {\n        this.reset();\n\n        this._buttonEnabled = false;\n        this._buttonText = 'Connecting...';\n        this.subscription = this.heartRateDevice.connect().subscribe(\n            (result) => this.handleUpdate(result),\n            (error) => this.handleError(error, 'Error connecting to sensor'),\n        );\n\n        this.subscription.add(this.wakelockHelper.maintainWakeLock().subscribe());\n    }\n\n    private reset(): void {\n        this._buttonEnabled = true;\n        this._buttonText = connectButtonText;\n        this._warningMessage = undefined;\n        this._errorMessage = undefined;\n        this._heartRate = undefined;\n    }\n\n    private handleUpdate(result: HeartRateResult) {\n        this.reset();\n        this._buttonEnabled = false;\n        this._buttonText = undefined;\n        this._heartRate = result.heartRate;\n        this.logger.trace(`Heart Rate Result`, result);\n    }\n\n    private handleError(error: unknown, message?: string) {\n        this.disconnect();\n\n        if (error instanceof DOMException && error.name === NOT_FOUND_ERROR) {\n            this._warningMessage = `No Device Selected`;\n        } else {\n            this._errorMessage = `${message ? message + ': ' : ''}${error}`;\n        }\n    }\n}\n","<div class=\"d-flex flex-column h-100\">\n\n    <div *ngIf=\"warningMessage != null\" class=\"alert alert-warning alert-dismissible mt-3\">\n        {{warningMessage}}\n\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dismissMessages()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n\n    <div *ngIf=\"errorMessage != null\" class=\"alert alert-danger alert-dismissible mt-3\">\n        {{errorMessage}}\n\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dismissMessages()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n\n    <div class=\"center-content position-relative\">\n        <div *ngIf=\"buttonText != null\" class=\"button-overlay center-content\">\n            <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"!buttonEnabled\" (click)=\"connectSensor()\">{{buttonText}}</button>\n        </div>\n\n        <div *ngIf=\"heartRate != null\" class=\"button-overlay center-content heart-rate\">\n            {{heartRate}}\n        </div>\n\n        <div>\n            <i class=\"bi-heart-fill\"></i>\n        </div>\n\n        <button *ngIf=\"canDisconnect\" type=\"button\" class=\"close close-button\" aria-label=\"Close\" (click)=\"disconnect()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n\n</div>","export * from './heart-rate.device';\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './components/app/app.component';\nimport { HeartRateComponent } from './components/heart-rate/heart-rate.component';\nimport { TrainerComponent } from './components/trainer/trainer.component';\nimport { HeartRateDevice } from './devices/heart-rate.device';\nimport { BluetoothHelper, Logger, WakelockHelper } from './helpers';\n\n@NgModule({\n    declarations: [AppComponent, HeartRateComponent, TrainerComponent],\n    imports: [BrowserModule, AppRoutingModule],\n    providers: [HeartRateDevice, Logger, BluetoothHelper, WakelockHelper],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nimport { Logger } from './logger';\n\n@Injectable()\nexport class WakelockHelper {\n    constructor(private logger: Logger) {}\n\n    public maintainWakeLock(): Observable<WakeLockSentinel> {\n        return this.requestWakeLock().pipe(\n            switchMap((v) => this.listenForRelease(v)),\n            switchMap(() => this.requestWakeLock()),\n        );\n    }\n\n    private requestWakeLock(): Observable<WakeLockSentinel> {\n        return new Observable((observer) => {\n            let _sentinel: WakeLockSentinel | undefined;\n\n            navigator.wakeLock.request('screen').then(\n                (sentinel) => {\n                    this.logger.info('Wake Lock Obtained', sentinel);\n                    _sentinel = sentinel;\n                    observer.next(sentinel);\n                },\n                (error) => observer.error(error),\n            );\n\n            return {\n                unsubscribe: () => {\n                    if (_sentinel != null) {\n                        this.logger.info(`Releasing wakelock`);\n                        _sentinel.release();\n                    }\n                },\n            };\n        });\n    }\n\n    private listenForRelease(sentinel: WakeLockSentinel): Observable<Event> {\n        return new Observable((observer) => {\n            this.logger.info(`Listening for wake lock release`);\n\n            sentinel.addEventListener('onrelease', (event) => {\n                this.logger.warn(`Wake Lock Released`);\n                observer.next(event);\n            });\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { from, interval, Observable } from 'rxjs';\nimport { catchError, map, switchMap, take, tap } from 'rxjs/operators';\n\nimport { Logger } from './logger';\n\n@Injectable()\nexport class BluetoothHelper {\n    constructor(private logger: Logger) {}\n\n    public requestDevice(\n        services: [BluetoothServiceUUID, ...BluetoothServiceUUID[]],\n        maxRetries = 5,\n        retries = 0,\n    ): Observable<BluetoothDevice> {\n        this.logger.info('Requesting Device...', services);\n        const requestStream = from(navigator.bluetooth.requestDevice({ filters: [{ services }] })).pipe(\n            tap((device) => this.logger.info(`Device Selected: ${device.name}`, device)),\n            catchError((err) => {\n                if (retries >= maxRetries || err.name === 'NotFoundError') {\n                    throw err;\n                } else {\n                    this.logger.error(`Error selecting device`, err);\n                    return this.requestDevice(services, maxRetries, retries + 1);\n                }\n            }),\n        );\n\n        return requestStream;\n    }\n\n    public connectServer(device: BluetoothDevice, maxRetries = 5, retries = 0): Observable<BluetoothRemoteGATTServer> {\n        if (device.gatt == null) {\n            throw new Error(`gatt is not defined on device`);\n        }\n\n        const server = device.gatt;\n\n        return new Observable<BluetoothRemoteGATTServer>((observer) => {\n            let unsubscribed = false;\n            this.logger.info(`Connecting to Server...`);\n\n            server.connect().then(\n                () => {\n                    if (unsubscribed) {\n                        server.disconnect();\n                    } else {\n                        this.logger.info(`Server Connected...`, server);\n                        observer.next(server);\n                    }\n                },\n                (error) => observer.error(error),\n            );\n\n            return {\n                unsubscribe: () => {\n                    unsubscribed = true;\n                    if (server.connected) {\n                        this.logger.info(`connectServer.unsubscribe: Disconnecting from server...`, server);\n                        server.disconnect();\n                    } else {\n                        this.logger.info(`connectServer.unsubscribe: Server already disconnected`, server);\n                    }\n                },\n            };\n        }).pipe(\n            catchError((err) => {\n                if (retries < maxRetries) {\n                    this.logger.error(`Error connecting to server`, err);\n                    return this.connectServer(device, maxRetries, retries + 1);\n                } else {\n                    throw err;\n                }\n            }),\n        );\n    }\n\n    public getService(\n        server: BluetoothRemoteGATTServer,\n        service: BluetoothServiceUUID,\n        maxRetries = 5,\n        retries = 0,\n    ): Observable<BluetoothRemoteGATTService> {\n        this.logger.info(`Getting Service '${service}'...`, server);\n\n        return from(server.getPrimaryService(service)).pipe(\n            tap((service) => this.logger.info(`Service Connected`, service)),\n            catchError((err) => {\n                this.logger.error(`Error getting service '${service}' (${retries})`, err);\n\n                if (!server.connected) {\n                    return this.connectServer(server.device, maxRetries, retries + 1).pipe(\n                        switchMap((newConnectionServer) =>\n                            this.getService(newConnectionServer, service, maxRetries, retries + 1),\n                        ),\n                    );\n                } else if (retries < maxRetries) {\n                    return this.getService(server, service, maxRetries, retries + 1);\n                } else {\n                    throw err;\n                }\n            }),\n        );\n    }\n\n    public getNotifications(characteristic: BluetoothRemoteGATTCharacteristic): Observable<DataView> {\n        characteristic.startNotifications();\n\n        return new Observable((observer) => {\n            function handleEvent() {\n                if (characteristic.value != null) {\n                    observer.next(characteristic.value);\n                }\n            }\n            this.logger.info(`Starting Notifications`, characteristic);\n            characteristic.addEventListener('characteristicvaluechanged', handleEvent);\n\n            return {\n                unsubscribe: () => {\n                    this.logger.info(`UNsubscribe from Notifications`, characteristic);\n                    characteristic.removeEventListener('characteristicvaluechanged', handleEvent);\n                },\n            };\n        });\n    }\n\n    public createTimeOutStream<T>(timeInMs: number): Observable<T> {\n        this.logger.info(`Starting timeout stream...`, timeInMs);\n\n        return interval(timeInMs).pipe(\n            take(1),\n            map(() => {\n                this.logger.warn(`Stream time out`);\n                throw new Error(`Timeout waiting for device connection.`);\n            }),\n        );\n    }\n\n    public createDeviceDisconnectionStream(device: BluetoothDevice): Observable<BluetoothDevice> {\n        return new Observable<BluetoothDevice>((observer) => {\n            const logger = this.logger;\n            function handleEvent() {\n                logger.info(`Device '${device.name}' disconnected`, device);\n                observer.next(device);\n            }\n            logger.info(`Add event listener: gattserverdisconnected`, device);\n            device.addEventListener('gattserverdisconnected', handleEvent);\n\n            return {\n                unsubscribe: () => {\n                    this.logger.info(`Remove Event Listener: gattserverdisconnected`);\n                    device.removeEventListener('gattserverdisconnected', handleEvent);\n                },\n            };\n        });\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'trainer',\n    templateUrl: './trainer.component.html',\n    styleUrls: ['./trainer.component.scss'],\n})\nexport class TrainerComponent {}\n","<p>trainer.component works!</p>\n","export const NOT_FOUND_ERROR = 'NotFoundError';\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}