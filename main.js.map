{"version":3,"sources":["./src/app/helpers/heart-rate.helper.ts","./src/app/helpers/messages.helper.ts","./src/app/helpers/index.ts","./src/environments/environment.ts","./src/app/devices/heart-rate.device.ts","./src/app/helpers/type-guards.helper.ts","./src/app/components/app/app.component.ts","./src/app/components/app/app.component.html","./src/app/components/heart-rate/heart-rate.component.ts","./src/app/components/heart-rate/heart-rate.component.html","./src/app/devices/index.ts","./src/app/app.module.ts","./src/app/helpers/wakelock.helper.ts","./src/app/helpers/bluetooth.helper.ts","./src/app/components/trainer/trainer.component.ts","./src/app/components/trainer/trainer.component.html","./src/app/constants.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HeartRateResult } from '../contracts';\nimport { isDataView } from './type-guards.helper';\n\nexport const HEART_RATE_SERVICE = 'heart_rate';\nexport const HEART_RATE_CHARACTERISTIC = `heart_rate_measurement`;\n\nexport const rate16Bits = 0x1;\nexport const contactDetected = 0x2;\nexport const contactSensorPresent = 0x4;\nexport const energyPresent = 0x8;\nexport const rrIntervalPresent = 0x10;\n\nexport function parseHeartRate(value: DataView | ArrayBuffer): HeartRateResult {\n    // In Chrome 50+, a DataView is returned instead of an ArrayBuffer.\n    value = isDataView(value) ? value : new DataView(value);\n\n    const flags = value.getUint8(0);\n    const rate16BitsFlag = flags & rate16Bits;\n    const result: Partial<HeartRateResult> = {};\n\n    let index = 1;\n    let heartRate: number;\n    if (rate16BitsFlag) {\n        heartRate = value.getUint16(index, /*littleEndian=*/ true);\n        index += 2;\n    } else {\n        heartRate = value.getUint8(index);\n        index += 1;\n    }\n\n    const contactDetectedFlag = flags & contactDetected;\n    const contactSensorPresentFlag = flags & contactSensorPresent;\n    if (contactSensorPresentFlag) {\n        result.contactDetected = !!contactDetectedFlag;\n    }\n\n    const energyPresentFlag = flags & energyPresent;\n    if (energyPresentFlag) {\n        result.energyExpended = value.getUint16(index, /*littleEndian=*/ true);\n        index += 2;\n    }\n\n    const rrIntervalPresentFlag = flags & rrIntervalPresent;\n    if (rrIntervalPresentFlag) {\n        result.rrIntervals = [];\n        for (; index + 1 < value.byteLength; index += 2) {\n            result.rrIntervals.push(value.getUint16(index, /*littleEndian=*/ true));\n        }\n    }\n\n    return { heartRate, ...result };\n}\n","import { ProgressMessage } from '../contracts';\n\nexport function createProgress(message: string, data?: unknown): ProgressMessage {\n    if (data != null) {\n        console.log(`PROGRESS MESSAGE`, message, data);\n    } else {\n        console.log(`PROGRESS MESSAGE`, message);\n    }\n    return { message, type: 'progressMessage' };\n}\n","export * from './bluetooth.helper';\nexport * from './heart-rate.helper';\nexport * from './type-guards.helper';\nexport * from './wakelock.helper';\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { from, merge, Observable, of } from 'rxjs';\nimport { filter, map, mergeMap, share, switchMap, takeUntil, tap } from 'rxjs/operators';\n\nimport { HeartRateResult, ProgressMessage } from '../contracts';\nimport {\n    connectServer,\n    deviceDisconnectionStream,\n    getNotifications,\n    getService,\n    handleProgress,\n    HEART_RATE_CHARACTERISTIC,\n    HEART_RATE_SERVICE,\n    isProgressMessage,\n    parseHeartRate,\n    requestDevice,\n    timeOutStream,\n} from '../helpers';\n\n@Injectable()\nexport class HeartRateDevice {\n    private server?: BluetoothRemoteGATTServer;\n    private characteristic?: BluetoothRemoteGATTCharacteristic;\n\n    public connect(): Observable<HeartRateResult | ProgressMessage> {\n        return requestDevice([HEART_RATE_SERVICE]).pipe(\n            mergeMap(\n                handleProgress((device) => {\n                    const updatesStream = this.subscribeToUpdates(device).pipe(share());\n\n                    return merge(\n                        updatesStream,\n                        timeOutStream<HeartRateResult>(60000).pipe(\n                            takeUntil(updatesStream.pipe(filter((v) => !isProgressMessage(v)))),\n                        ),\n                    );\n                }),\n            ),\n        );\n    }\n\n    public async disconnect(): Promise<boolean> {\n        if (this.characteristic != null && this.server?.connected) {\n            try {\n                await this.characteristic.stopNotifications();\n            } catch (e) {\n                console.log(`Error stopping notifications: `, e);\n            }\n        }\n\n        if (this.server) {\n            this.server.disconnect();\n        }\n\n        this.server = undefined;\n        this.characteristic = undefined;\n\n        return true;\n    }\n\n    private subscribeToUpdates(device: BluetoothDevice) {\n        return merge(of(device), deviceDisconnectionStream(device)).pipe(\n            switchMap(handleProgress((device) => connectServer(device))),\n            switchMap(handleProgress((server) => getService(server, HEART_RATE_SERVICE))),\n            switchMap(handleProgress((service) => from(service.getCharacteristic(HEART_RATE_CHARACTERISTIC)))),\n            tap((value) => {\n                if (!isProgressMessage(value)) {\n                    this.characteristic = value;\n                }\n            }),\n            switchMap(handleProgress((characteristic) => getNotifications(characteristic))),\n            map((data) => (isProgressMessage(data) ? data : parseHeartRate(data))),\n        );\n    }\n}\n","import { ProgressMessage } from '../contracts';\n\nexport function isDataView(value: unknown): value is DataView {\n    return value != null && (value as DataView).buffer instanceof ArrayBuffer;\n}\n\nexport function isProgressMessage(value: unknown): value is ProgressMessage {\n    return value != null && (value as ProgressMessage).type === 'progressMessage';\n}\n","import { Component } from '@angular/core';\n\nimport { version } from '../../../../package.json';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n    constructor() {\n        document.title = `HRM Trainer Control ${version}`;\n    }\n\n    public get version(): string {\n        return version;\n    }\n}\n","\n<small class=\"version-display text-muted\">{{version}}</small>\n\n<div class=\"container d-flex flex-column h-100\">\n\n    <heart-rate class=\"flex-grow-1\"></heart-rate>\n\n    <trainer></trainer>\n</div>","import { Component } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { NOT_FOUND_ERROR } from '../../constants';\nimport { HeartRateResult, ProgressMessage } from '../../contracts';\nimport { HeartRateDevice } from '../../devices';\nimport { isProgressMessage, maintainWakeLock } from '../../helpers';\n\nconst connectButtonText = 'Connect HRM';\n\n@Component({\n    selector: 'heart-rate',\n    templateUrl: './heart-rate.component.html',\n    styleUrls: ['./heart-rate.component.scss'],\n})\nexport class HeartRateComponent {\n    private wakeLockSentinel: WakeLockSentinel | undefined;\n\n    constructor(private heartRateDevice: HeartRateDevice) {}\n\n    private _logOutput = '';\n\n    public get logOutput(): string {\n        return `[\n${this._logOutput}]`;\n    }\n\n    private _warningMessage?: string;\n\n    public get warningMessage(): string | undefined {\n        return this._warningMessage;\n    }\n\n    private _errorMessage?: string;\n\n    public get errorMessage(): string | undefined {\n        return this._errorMessage;\n    }\n\n    private _heartRate?: number;\n\n    public get heartRate(): number | undefined {\n        return this._heartRate;\n    }\n\n    private _buttonText: string | undefined = connectButtonText;\n\n    public get buttonText(): string | undefined {\n        return this._buttonText;\n    }\n\n    private _buttonEnabled = true;\n\n    public get buttonEnabled(): boolean {\n        return this._buttonEnabled;\n    }\n\n    private subscription?: Subscription;\n\n    public get canDisconnect(): boolean {\n        return this.subscription != null;\n    }\n\n    public async disconnect(): Promise<void> {\n        this.reset();\n\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = undefined;\n        }\n\n        if (this.wakeLockSentinel) {\n            this.wakeLockSentinel.release();\n            this.wakeLockSentinel = undefined;\n        }\n\n        await this.heartRateDevice.disconnect();\n    }\n\n    public dismissMessages(): void {\n        this._warningMessage = undefined;\n        this._errorMessage = undefined;\n    }\n\n    public connectSensor(): void {\n        this.reset();\n\n        this._buttonEnabled = false;\n        this._buttonText = 'Connecting...';\n        this.subscription = this.heartRateDevice.connect().subscribe(\n            (result) => this.handleUpdate(result),\n            (error) => this.handleError(error, 'Error connecting to sensor'),\n        );\n\n        const wakeLockSubscription = maintainWakeLock().subscribe((result) => this.handleUpdate(result));\n        this.subscription.add(wakeLockSubscription);\n    }\n\n    private reset(): void {\n        this._buttonEnabled = true;\n        this._buttonText = connectButtonText;\n        this._warningMessage = undefined;\n        this._errorMessage = undefined;\n        this._heartRate = undefined;\n    }\n\n    private handleUpdate(result: HeartRateResult | ProgressMessage) {\n        this.log(isProgressMessage(result) ? result : { heartRate: result.heartRate });\n\n        if (isProgressMessage(result)) {\n            return;\n        }\n\n        this.reset();\n        this._buttonEnabled = false;\n        this._buttonText = undefined;\n        this._heartRate = result.heartRate;\n        console.log(`Heart Rate Result`, result);\n    }\n\n    private handleError(error: unknown, message?: string) {\n        this.disconnect();\n\n        if (error instanceof DOMException && error.name === NOT_FOUND_ERROR) {\n            this._warningMessage = `No Device Selected`;\n        } else {\n            this._errorMessage = `${message ? message + ': ' : ''}${error}`;\n        }\n    }\n\n    private log(data: Record<string, string | number | boolean | undefined>) {\n        this._logOutput = `${JSON.stringify({ ...data, at: Date.now() })},\\n${this._logOutput}`;\n    }\n}\n","<div class=\"d-flex flex-column h-100\">\n\n    <div *ngIf=\"warningMessage != null\" class=\"alert alert-warning alert-dismissible mt-3\">\n        {{warningMessage}}\n\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dismissMessages()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n\n    <div *ngIf=\"errorMessage != null\" class=\"alert alert-danger alert-dismissible mt-3\">\n        {{errorMessage}}\n\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dismissMessages()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n\n    <div class=\"center-content position-relative\">\n        <div *ngIf=\"buttonText != null\" class=\"button-overlay center-content\">\n            <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"!buttonEnabled\" (click)=\"connectSensor()\">{{buttonText}}</button>\n        </div>\n\n        <div *ngIf=\"heartRate != null\" class=\"button-overlay center-content heart-rate\">\n            {{heartRate}}\n        </div>\n\n        <div>\n            <i class=\"bi-heart-fill\"></i>\n        </div>\n\n        <button *ngIf=\"canDisconnect\" type=\"button\" class=\"close close-button\" aria-label=\"Close\" (click)=\"disconnect()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n\n    <div class=\"flex-grow-1\">\n        <textarea class=\"w-100 h-100\" [value]=\"logOutput\"></textarea>\n    </div>\n\n</div>","export * from './heart-rate.device';\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './components/app/app.component';\nimport { HeartRateComponent } from './components/heart-rate/heart-rate.component';\nimport { TrainerComponent } from './components/trainer/trainer.component';\nimport { HeartRateDevice } from './devices/heart-rate.device';\n\n@NgModule({\n    declarations: [AppComponent, HeartRateComponent, TrainerComponent],\n    imports: [BrowserModule, AppRoutingModule],\n    providers: [HeartRateDevice],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Observable, of } from 'rxjs';\nimport { filter, switchMap } from 'rxjs/operators';\n\nimport { ProgressMessage } from '../contracts';\nimport { createProgress } from './messages.helper';\nimport { isProgressMessage } from './type-guards.helper';\n\nexport function maintainWakeLock(): Observable<ProgressMessage> {\n    return requestWakeLock().pipe(\n        switchMap((v) => (isProgressMessage(v) ? of(v) : listenForRelease(v))),\n        switchMap((v) => (isProgressMessage(v) ? of(v) : requestWakeLock())),\n        filter(isProgressMessage),\n    );\n}\n\nfunction requestWakeLock(): Observable<WakeLockSentinel | ProgressMessage> {\n    return new Observable((observer) => {\n        let _sentinel: WakeLockSentinel | undefined;\n\n        navigator.wakeLock.request('screen').then(\n            (sentinel) => {\n                observer.next(createProgress('Wake Lock Obtained', sentinel));\n                _sentinel = sentinel;\n                observer.next(sentinel);\n            },\n            (error) => observer.error(error),\n        );\n\n        return {\n            unsubscribe: () => {\n                if (_sentinel != null) {\n                    console.log(`Releasing wakelock`);\n                    _sentinel.release();\n                }\n            },\n        };\n    });\n}\n\nfunction listenForRelease(sentinel: WakeLockSentinel): Observable<Event | ProgressMessage> {\n    return new Observable((observer) => {\n        observer.next({ type: 'progressMessage', message: 'Listening for wake lock release' });\n        sentinel.addEventListener('onrelease', (event) => {\n            observer.next({ type: 'progressMessage', message: 'Wake Lock Released' });\n            console.log(`Wake Lock Released`);\n            observer.next(event);\n        });\n    });\n}\n","import { from, interval, merge, Observable, of } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap, take } from 'rxjs/operators';\n\nimport { ProgressMessage } from '../contracts';\nimport { createProgress } from './messages.helper';\nimport { isProgressMessage } from './type-guards.helper';\n\nconst retryCount = 5;\n\nexport function requestDevice(\n    services: [BluetoothServiceUUID, ...BluetoothServiceUUID[]],\n    retries = 0,\n): Observable<BluetoothDevice | ProgressMessage> {\n    const requestStream = from(navigator.bluetooth.requestDevice({ filters: [{ services }] })).pipe(\n        mergeMap((device) => merge(of(createProgress(`Device Selected: ${device.name}`, device)), of(device))),\n        catchError((err) => {\n            if (retries >= retryCount || err.name === 'NotFoundError') {\n                throw err;\n            } else {\n                return merge(of(createProgress(`Error selecting device`, err)), requestDevice(services, retries + 1));\n            }\n        }),\n    );\n\n    return merge(of(createProgress('Requesting Device...', services)), requestStream);\n}\n\nexport function connectServer(\n    device: BluetoothDevice,\n    retries = 0,\n): Observable<BluetoothRemoteGATTServer | ProgressMessage> {\n    if (device.gatt == null) {\n        throw new Error(`gatt is not defined on device`);\n    }\n\n    const server = device.gatt;\n\n    return new Observable<BluetoothRemoteGATTServer | ProgressMessage>((observer) => {\n        let unsubscribed = false;\n        observer.next(createProgress(`Connecting to Server...`));\n\n        server.connect().then(\n            () => {\n                if (unsubscribed) {\n                    server.disconnect();\n                } else {\n                    observer.next(createProgress(`Server Connected...`, server));\n                    observer.next(server);\n                }\n            },\n            (error) => observer.error(error),\n        );\n\n        return {\n            unsubscribe: () => {\n                unsubscribed = true;\n                if (server.connected) {\n                    console.log(`connectServer.unsubscribe: Disconnecting from server...`, server);\n                    server.disconnect();\n                } else {\n                    console.log(`connectServer.unsubscribe: Server already disconnected`, server);\n                }\n            },\n        };\n    }).pipe(\n        catchError((err) => {\n            if (retries < retryCount) {\n                return merge(of(createProgress(`Error connecting to server`, err)), connectServer(device, retries + 1));\n            } else {\n                throw err;\n            }\n        }),\n    );\n}\n\nexport function getService(\n    server: BluetoothRemoteGATTServer,\n    service: BluetoothServiceUUID,\n    retries = 0,\n): Observable<BluetoothRemoteGATTService | ProgressMessage> {\n    console.log(`getService ${service}`, server);\n\n    const getServiceStream = from(server.getPrimaryService(service)).pipe(\n        mergeMap((service) => merge(of(createProgress(`Service Connected`, service)), of(service))),\n        catchError((err) => {\n            let returnObservable: Observable<BluetoothRemoteGATTService | ProgressMessage>;\n\n            if (!server.connected) {\n                returnObservable = connectServer(server.device, retries + 1).pipe(\n                    switchMap((v) => (isProgressMessage(v) ? of(v) : getService(server, service, retries + 1))),\n                );\n            } else if (retries < 3) {\n                returnObservable = getService(server, service, retries + 1);\n            } else {\n                throw err;\n            }\n\n            return merge(of(createProgress(`Error getting service '${service}' (${retries})`, err)), returnObservable);\n        }),\n    );\n\n    return merge(of(createProgress(`Getting Service '${service}'...`, server)), getServiceStream);\n}\n\nexport function getNotifications(\n    characteristic: BluetoothRemoteGATTCharacteristic,\n): Observable<DataView | ProgressMessage> {\n    characteristic.startNotifications();\n\n    return new Observable((observer) => {\n        function handleEvent() {\n            if (characteristic.value != null) {\n                observer.next(characteristic.value);\n            }\n        }\n        observer.next(createProgress(`Starting Notifications`, characteristic));\n        characteristic.addEventListener('characteristicvaluechanged', handleEvent);\n\n        return {\n            unsubscribe: () => {\n                characteristic.removeEventListener('characteristicvaluechanged', handleEvent);\n            },\n        };\n    });\n}\n\nexport function timeOutStream<T>(timeInMs: number): Observable<T> {\n    console.log(`Starting timeout...`, timeInMs);\n\n    return interval(timeInMs).pipe(\n        take(1),\n        map(() => {\n            throw new Error(`Timeout waiting for device connection.`);\n        }),\n    );\n}\n\nexport function deviceDisconnectionStream(device: BluetoothDevice): Observable<BluetoothDevice | ProgressMessage> {\n    return new Observable<BluetoothDevice | ProgressMessage>((observer) => {\n        function handleEvent() {\n            observer.next(device);\n        }\n\n        observer.next(createProgress(`Add event listener: gattserverdisconnected`, device));\n        device.addEventListener('gattserverdisconnected', handleEvent);\n\n        return {\n            unsubscribe: () => {\n                console.log(`Remove Event Listener: gattserverdisconnected`);\n                device.removeEventListener('gattserverdisconnected', handleEvent);\n            },\n        };\n    });\n}\n\nexport function handleProgress<T, R>(\n    func: (value: T) => Observable<R>,\n): (value: T | ProgressMessage) => Observable<R | ProgressMessage> {\n    return (value: T | ProgressMessage) => {\n        if (isProgressMessage(value)) {\n            return of(value);\n        }\n\n        return func(value);\n    };\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'trainer',\n    templateUrl: './trainer.component.html',\n    styleUrls: ['./trainer.component.scss'],\n})\nexport class TrainerComponent {}\n","<p>trainer.component works!</p>\n","export const NOT_FOUND_ERROR = 'NotFoundError';\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}